{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,mBAAW,CAXH;AAYRC,sBAAc,CAZN;AAaRC,sBAAc,CAbN;AAcRC,eAAO;AAdC,KAHP;AAmBLC,mBAAe,yBAAU;AACrB,YAAIC,SAASV,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,CAAH,CAAK,CAAL,EAAQ,KAAKP,SAAb,CAA7B,EAAsDQ,MAAtD,CAA6Db,GAAGc,kBAAH,EAA7D,CAAb;AACA,YAAIC,WAAWf,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKP,SAAd,CAA7B,EAAuDQ,MAAvD,CAA8Db,GAAGgB,iBAAH,EAA9D,CAAf;AACA,eAAOhB,GAAGiB,aAAH,CAAiBjB,GAAGkB,QAAH,CAAYR,MAAZ,EAAmBK,QAAnB,CAAjB,CAAP;AACH,KAvBI;;AAyBLI,qBAAiB,2BAAU;AACvB,YAAIC,OAAO,IAAX;AACApB,WAAGqB,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOvB,GAAGwB,aAAH,CAAiBC,QADA;AAExBC,0BAAc,sBAASC,OAAT,EAAiBJ,KAAjB,EAAuB;AACjC,wBAAOI,OAAP;AACI,yBAAK3B,GAAG4B,GAAH,CAAOC,CAAZ;AACIT,6BAAKU,OAAL,GAAe,IAAf;AACAV,6BAAKW,QAAL,GAAgB,KAAhB;AACA;AACJ,yBAAK/B,GAAG4B,GAAH,CAAOI,CAAZ;AACIZ,6BAAKU,OAAL,GAAe,KAAf;AACAV,6BAAKW,QAAL,GAAgB,IAAhB;AACA;;AARR;AAWH,aAduB;AAexBE,2BAAe,uBAASN,OAAT,EAAiBJ,KAAjB,EAAuB;AAClC,wBAAOI,OAAP;AACI,yBAAK3B,GAAG4B,GAAH,CAAOC,CAAZ;AACIT,6BAAKU,OAAL,GAAe,KAAf;AACA;AACJ,yBAAK9B,GAAG4B,GAAH,CAAOI,CAAZ;AACIZ,6BAAKW,QAAL,GAAgB,KAAhB;AACA;;AANR;AASJ;AAzBwB,SAA5B,EA0BEX,KAAKc,IA1BP;AA2BH,KAtDI;;AAwDL;AACAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,UAAL,GAAkB,KAAK3B,aAAL,EAAlB;AACA,aAAKyB,IAAL,CAAUG,SAAV,CAAoB,KAAKD,UAAzB;;AAEA,aAAKN,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKO,MAAL,GAAc,CAAd;;AAEA,aAAKnB,eAAL;AACH,KAnEI;;AAqEL;AACCoB,YAAQ,gBAAUC,EAAV,EAAc;;AAEnB,YAAG,KAAKV,OAAR,EAAgB;AACZ,iBAAKQ,MAAL,IAAe,KAAK9B,KAAL,GAAagC,EAA5B;AACH,SAFD,MAEM,IAAG,KAAKT,QAAR,EAAiB;AACnB,iBAAKO,MAAL,IAAe,KAAK9B,KAAL,GAAagC,EAA5B;AACH;;AAED,YAAGC,KAAKC,GAAL,CAAS,KAAKJ,MAAd,IAAsB,KAAK/B,YAA9B,EAA2C;AACvC,iBAAK+B,MAAL,GAAc,KAAK/B,YAAL,GAAoB,KAAK+B,MAAzB,GAAkCG,KAAKC,GAAL,CAAS,KAAKJ,MAAd,CAAhD;AACH;;AAED,aAAKJ,IAAL,CAAUS,CAAV,IAAe,KAAKL,MAAL,GAAcE,EAA7B;AAEF;AApFG,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        jumpHight: 0,\r\n        jumpDuration: 0,\r\n        maxMoveSpeed: 0,\r\n        accel: 0,\r\n    },\r\n    setJumpAction: function(){\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHight)).easing(cc.easeCubicActionOut());\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHight)).easing(cc.easeCubicActionIn());\r\n        return cc.repeatForever(cc.sequence(jumpUp,jumpDown));\r\n    },\r\n\r\n    setInputControl: function(){\r\n        var self = this;\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function(keyCode,event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n\r\n                }\r\n            },\r\n            onKeyReleased: function(keyCode,event){\r\n                switch(keyCode){\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n\r\n                }\r\n           }\r\n        },self.node);\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n        \r\n        this.setInputControl();\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n     update: function (dt) {\r\n        \r\n        if(this.accLeft){\r\n            this.xSpeed -= this.accel * dt;\r\n        }else if(this.accRight){\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n\r\n        if(Math.abs(this.xSpeed)>this.maxMoveSpeed){\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed); \r\n        }\r\n\r\n        this.node.x += this.xSpeed * dt;\r\n        \r\n     },\r\n});\r\n"]}